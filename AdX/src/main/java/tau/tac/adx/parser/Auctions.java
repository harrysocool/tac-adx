// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auctions.proto

package tau.tac.adx.parser;

public final class Auctions {
  private Auctions() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code MarketSegment}
   */
  public enum MarketSegment
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MALE = 0;</code>
     */
    MALE(0, 0),
    /**
     * <code>FEMALE = 1;</code>
     */
    FEMALE(1, 1),
    /**
     * <code>YOUNG = 2;</code>
     */
    YOUNG(2, 2),
    /**
     * <code>OLD = 3;</code>
     */
    OLD(3, 3),
    /**
     * <code>LOW_INCOME = 4;</code>
     */
    LOW_INCOME(4, 4),
    /**
     * <code>HIGH_INCOME = 5;</code>
     */
    HIGH_INCOME(5, 5),
    ;

    /**
     * <code>MALE = 0;</code>
     */
    public static final int MALE_VALUE = 0;
    /**
     * <code>FEMALE = 1;</code>
     */
    public static final int FEMALE_VALUE = 1;
    /**
     * <code>YOUNG = 2;</code>
     */
    public static final int YOUNG_VALUE = 2;
    /**
     * <code>OLD = 3;</code>
     */
    public static final int OLD_VALUE = 3;
    /**
     * <code>LOW_INCOME = 4;</code>
     */
    public static final int LOW_INCOME_VALUE = 4;
    /**
     * <code>HIGH_INCOME = 5;</code>
     */
    public static final int HIGH_INCOME_VALUE = 5;


    public final int getNumber() { return value; }

    public static MarketSegment valueOf(int value) {
      switch (value) {
        case 0: return MALE;
        case 1: return FEMALE;
        case 2: return YOUNG;
        case 3: return OLD;
        case 4: return LOW_INCOME;
        case 5: return HIGH_INCOME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MarketSegment>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MarketSegment>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MarketSegment>() {
            public MarketSegment findValueByNumber(int number) {
              return MarketSegment.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tau.tac.adx.parser.Auctions.getDescriptor().getEnumTypes().get(0);
    }

    private static final MarketSegment[] VALUES = values();

    public static MarketSegment valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MarketSegment(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MarketSegment)
  }

  /**
   * Protobuf enum {@code Device}
   */
  public enum Device
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MOBILE = 0;</code>
     */
    MOBILE(0, 0),
    /**
     * <code>PC = 1;</code>
     */
    PC(1, 1),
    ;

    /**
     * <code>MOBILE = 0;</code>
     */
    public static final int MOBILE_VALUE = 0;
    /**
     * <code>PC = 1;</code>
     */
    public static final int PC_VALUE = 1;


    public final int getNumber() { return value; }

    public static Device valueOf(int value) {
      switch (value) {
        case 0: return MOBILE;
        case 1: return PC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Device>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Device>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Device>() {
            public Device findValueByNumber(int number) {
              return Device.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tau.tac.adx.parser.Auctions.getDescriptor().getEnumTypes().get(1);
    }

    private static final Device[] VALUES = values();

    public static Device valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Device(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Device)
  }

  /**
   * Protobuf enum {@code AdType}
   */
  public enum AdType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TEXT = 0;</code>
     */
    TEXT(0, 0),
    /**
     * <code>VIDEO = 1;</code>
     */
    VIDEO(1, 1),
    ;

    /**
     * <code>TEXT = 0;</code>
     */
    public static final int TEXT_VALUE = 0;
    /**
     * <code>VIDEO = 1;</code>
     */
    public static final int VIDEO_VALUE = 1;


    public final int getNumber() { return value; }

    public static AdType valueOf(int value) {
      switch (value) {
        case 0: return TEXT;
        case 1: return VIDEO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AdType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdType>() {
            public AdType findValueByNumber(int number) {
              return AdType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tau.tac.adx.parser.Auctions.getDescriptor().getEnumTypes().get(2);
    }

    private static final AdType[] VALUES = values();

    public static AdType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private AdType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AdType)
  }

  public interface AdxQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string publisher = 1;
    /**
     * <code>required string publisher = 1;</code>
     */
    boolean hasPublisher();
    /**
     * <code>required string publisher = 1;</code>
     */
    java.lang.String getPublisher();
    /**
     * <code>required string publisher = 1;</code>
     */
    com.google.protobuf.ByteString
        getPublisherBytes();

    // repeated .MarketSegment marketSegments = 2;
    /**
     * <code>repeated .MarketSegment marketSegments = 2;</code>
     */
    java.util.List<tau.tac.adx.parser.Auctions.MarketSegment> getMarketSegmentsList();
    /**
     * <code>repeated .MarketSegment marketSegments = 2;</code>
     */
    int getMarketSegmentsCount();
    /**
     * <code>repeated .MarketSegment marketSegments = 2;</code>
     */
    tau.tac.adx.parser.Auctions.MarketSegment getMarketSegments(int index);

    // required .Device device = 3;
    /**
     * <code>required .Device device = 3;</code>
     */
    boolean hasDevice();
    /**
     * <code>required .Device device = 3;</code>
     */
    tau.tac.adx.parser.Auctions.Device getDevice();

    // required .AdType adtype = 4;
    /**
     * <code>required .AdType adtype = 4;</code>
     */
    boolean hasAdtype();
    /**
     * <code>required .AdType adtype = 4;</code>
     */
    tau.tac.adx.parser.Auctions.AdType getAdtype();
  }
  /**
   * Protobuf type {@code AdxQuery}
   */
  public static final class AdxQuery extends
      com.google.protobuf.GeneratedMessage
      implements AdxQueryOrBuilder {
    // Use AdxQuery.newBuilder() to construct.
    private AdxQuery(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AdxQuery(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AdxQuery defaultInstance;
    public static AdxQuery getDefaultInstance() {
      return defaultInstance;
    }

    public AdxQuery getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AdxQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              publisher_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              tau.tac.adx.parser.Auctions.MarketSegment value = tau.tac.adx.parser.Auctions.MarketSegment.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  marketSegments_ = new java.util.ArrayList<tau.tac.adx.parser.Auctions.MarketSegment>();
                  mutable_bitField0_ |= 0x00000002;
                }
                marketSegments_.add(value);
              }
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                tau.tac.adx.parser.Auctions.MarketSegment value = tau.tac.adx.parser.Auctions.MarketSegment.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    marketSegments_ = new java.util.ArrayList<tau.tac.adx.parser.Auctions.MarketSegment>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  marketSegments_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              tau.tac.adx.parser.Auctions.Device value = tau.tac.adx.parser.Auctions.Device.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                device_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              tau.tac.adx.parser.Auctions.AdType value = tau.tac.adx.parser.Auctions.AdType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                adtype_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          marketSegments_ = java.util.Collections.unmodifiableList(marketSegments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tau.tac.adx.parser.Auctions.internal_static_AdxQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tau.tac.adx.parser.Auctions.internal_static_AdxQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tau.tac.adx.parser.Auctions.AdxQuery.class, tau.tac.adx.parser.Auctions.AdxQuery.Builder.class);
    }

    public static com.google.protobuf.Parser<AdxQuery> PARSER =
        new com.google.protobuf.AbstractParser<AdxQuery>() {
      public AdxQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdxQuery(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AdxQuery> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string publisher = 1;
    public static final int PUBLISHER_FIELD_NUMBER = 1;
    private java.lang.Object publisher_;
    /**
     * <code>required string publisher = 1;</code>
     */
    public boolean hasPublisher() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string publisher = 1;</code>
     */
    public java.lang.String getPublisher() {
      java.lang.Object ref = publisher_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          publisher_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string publisher = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPublisherBytes() {
      java.lang.Object ref = publisher_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        publisher_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .MarketSegment marketSegments = 2;
    public static final int MARKETSEGMENTS_FIELD_NUMBER = 2;
    private java.util.List<tau.tac.adx.parser.Auctions.MarketSegment> marketSegments_;
    /**
     * <code>repeated .MarketSegment marketSegments = 2;</code>
     */
    public java.util.List<tau.tac.adx.parser.Auctions.MarketSegment> getMarketSegmentsList() {
      return marketSegments_;
    }
    /**
     * <code>repeated .MarketSegment marketSegments = 2;</code>
     */
    public int getMarketSegmentsCount() {
      return marketSegments_.size();
    }
    /**
     * <code>repeated .MarketSegment marketSegments = 2;</code>
     */
    public tau.tac.adx.parser.Auctions.MarketSegment getMarketSegments(int index) {
      return marketSegments_.get(index);
    }

    // required .Device device = 3;
    public static final int DEVICE_FIELD_NUMBER = 3;
    private tau.tac.adx.parser.Auctions.Device device_;
    /**
     * <code>required .Device device = 3;</code>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Device device = 3;</code>
     */
    public tau.tac.adx.parser.Auctions.Device getDevice() {
      return device_;
    }

    // required .AdType adtype = 4;
    public static final int ADTYPE_FIELD_NUMBER = 4;
    private tau.tac.adx.parser.Auctions.AdType adtype_;
    /**
     * <code>required .AdType adtype = 4;</code>
     */
    public boolean hasAdtype() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .AdType adtype = 4;</code>
     */
    public tau.tac.adx.parser.Auctions.AdType getAdtype() {
      return adtype_;
    }

    private void initFields() {
      publisher_ = "";
      marketSegments_ = java.util.Collections.emptyList();
      device_ = tau.tac.adx.parser.Auctions.Device.MOBILE;
      adtype_ = tau.tac.adx.parser.Auctions.AdType.TEXT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPublisher()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDevice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdtype()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPublisherBytes());
      }
      for (int i = 0; i < marketSegments_.size(); i++) {
        output.writeEnum(2, marketSegments_.get(i).getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(3, device_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, adtype_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPublisherBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < marketSegments_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(marketSegments_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * marketSegments_.size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, device_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, adtype_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static tau.tac.adx.parser.Auctions.AdxQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AdxQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(tau.tac.adx.parser.Auctions.AdxQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AdxQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements tau.tac.adx.parser.Auctions.AdxQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tau.tac.adx.parser.Auctions.internal_static_AdxQuery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tau.tac.adx.parser.Auctions.internal_static_AdxQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tau.tac.adx.parser.Auctions.AdxQuery.class, tau.tac.adx.parser.Auctions.AdxQuery.Builder.class);
      }

      // Construct using tau.tac.adx.parser.Auctions.AdxQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        publisher_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        marketSegments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        device_ = tau.tac.adx.parser.Auctions.Device.MOBILE;
        bitField0_ = (bitField0_ & ~0x00000004);
        adtype_ = tau.tac.adx.parser.Auctions.AdType.TEXT;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tau.tac.adx.parser.Auctions.internal_static_AdxQuery_descriptor;
      }

      public tau.tac.adx.parser.Auctions.AdxQuery getDefaultInstanceForType() {
        return tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
      }

      public tau.tac.adx.parser.Auctions.AdxQuery build() {
        tau.tac.adx.parser.Auctions.AdxQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tau.tac.adx.parser.Auctions.AdxQuery buildPartial() {
        tau.tac.adx.parser.Auctions.AdxQuery result = new tau.tac.adx.parser.Auctions.AdxQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.publisher_ = publisher_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          marketSegments_ = java.util.Collections.unmodifiableList(marketSegments_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.marketSegments_ = marketSegments_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.device_ = device_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.adtype_ = adtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tau.tac.adx.parser.Auctions.AdxQuery) {
          return mergeFrom((tau.tac.adx.parser.Auctions.AdxQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tau.tac.adx.parser.Auctions.AdxQuery other) {
        if (other == tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance()) return this;
        if (other.hasPublisher()) {
          bitField0_ |= 0x00000001;
          publisher_ = other.publisher_;
          onChanged();
        }
        if (!other.marketSegments_.isEmpty()) {
          if (marketSegments_.isEmpty()) {
            marketSegments_ = other.marketSegments_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMarketSegmentsIsMutable();
            marketSegments_.addAll(other.marketSegments_);
          }
          onChanged();
        }
        if (other.hasDevice()) {
          setDevice(other.getDevice());
        }
        if (other.hasAdtype()) {
          setAdtype(other.getAdtype());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPublisher()) {
          
          return false;
        }
        if (!hasDevice()) {
          
          return false;
        }
        if (!hasAdtype()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tau.tac.adx.parser.Auctions.AdxQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tau.tac.adx.parser.Auctions.AdxQuery) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string publisher = 1;
      private java.lang.Object publisher_ = "";
      /**
       * <code>required string publisher = 1;</code>
       */
      public boolean hasPublisher() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string publisher = 1;</code>
       */
      public java.lang.String getPublisher() {
        java.lang.Object ref = publisher_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          publisher_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string publisher = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPublisherBytes() {
        java.lang.Object ref = publisher_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          publisher_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string publisher = 1;</code>
       */
      public Builder setPublisher(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        publisher_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string publisher = 1;</code>
       */
      public Builder clearPublisher() {
        bitField0_ = (bitField0_ & ~0x00000001);
        publisher_ = getDefaultInstance().getPublisher();
        onChanged();
        return this;
      }
      /**
       * <code>required string publisher = 1;</code>
       */
      public Builder setPublisherBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        publisher_ = value;
        onChanged();
        return this;
      }

      // repeated .MarketSegment marketSegments = 2;
      private java.util.List<tau.tac.adx.parser.Auctions.MarketSegment> marketSegments_ =
        java.util.Collections.emptyList();
      private void ensureMarketSegmentsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          marketSegments_ = new java.util.ArrayList<tau.tac.adx.parser.Auctions.MarketSegment>(marketSegments_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated .MarketSegment marketSegments = 2;</code>
       */
      public java.util.List<tau.tac.adx.parser.Auctions.MarketSegment> getMarketSegmentsList() {
        return java.util.Collections.unmodifiableList(marketSegments_);
      }
      /**
       * <code>repeated .MarketSegment marketSegments = 2;</code>
       */
      public int getMarketSegmentsCount() {
        return marketSegments_.size();
      }
      /**
       * <code>repeated .MarketSegment marketSegments = 2;</code>
       */
      public tau.tac.adx.parser.Auctions.MarketSegment getMarketSegments(int index) {
        return marketSegments_.get(index);
      }
      /**
       * <code>repeated .MarketSegment marketSegments = 2;</code>
       */
      public Builder setMarketSegments(
          int index, tau.tac.adx.parser.Auctions.MarketSegment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarketSegmentsIsMutable();
        marketSegments_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .MarketSegment marketSegments = 2;</code>
       */
      public Builder addMarketSegments(tau.tac.adx.parser.Auctions.MarketSegment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarketSegmentsIsMutable();
        marketSegments_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .MarketSegment marketSegments = 2;</code>
       */
      public Builder addAllMarketSegments(
          java.lang.Iterable<? extends tau.tac.adx.parser.Auctions.MarketSegment> values) {
        ensureMarketSegmentsIsMutable();
        super.addAll(values, marketSegments_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .MarketSegment marketSegments = 2;</code>
       */
      public Builder clearMarketSegments() {
        marketSegments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // required .Device device = 3;
      private tau.tac.adx.parser.Auctions.Device device_ = tau.tac.adx.parser.Auctions.Device.MOBILE;
      /**
       * <code>required .Device device = 3;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .Device device = 3;</code>
       */
      public tau.tac.adx.parser.Auctions.Device getDevice() {
        return device_;
      }
      /**
       * <code>required .Device device = 3;</code>
       */
      public Builder setDevice(tau.tac.adx.parser.Auctions.Device value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        device_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Device device = 3;</code>
       */
      public Builder clearDevice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        device_ = tau.tac.adx.parser.Auctions.Device.MOBILE;
        onChanged();
        return this;
      }

      // required .AdType adtype = 4;
      private tau.tac.adx.parser.Auctions.AdType adtype_ = tau.tac.adx.parser.Auctions.AdType.TEXT;
      /**
       * <code>required .AdType adtype = 4;</code>
       */
      public boolean hasAdtype() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .AdType adtype = 4;</code>
       */
      public tau.tac.adx.parser.Auctions.AdType getAdtype() {
        return adtype_;
      }
      /**
       * <code>required .AdType adtype = 4;</code>
       */
      public Builder setAdtype(tau.tac.adx.parser.Auctions.AdType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        adtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .AdType adtype = 4;</code>
       */
      public Builder clearAdtype() {
        bitField0_ = (bitField0_ & ~0x00000008);
        adtype_ = tau.tac.adx.parser.Auctions.AdType.TEXT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AdxQuery)
    }

    static {
      defaultInstance = new AdxQuery(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AdxQuery)
  }

  public interface AuctionReportOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required double firstBid = 1;
    /**
     * <code>required double firstBid = 1;</code>
     */
    boolean hasFirstBid();
    /**
     * <code>required double firstBid = 1;</code>
     */
    double getFirstBid();

    // required double secondsBid = 2;
    /**
     * <code>required double secondsBid = 2;</code>
     */
    boolean hasSecondsBid();
    /**
     * <code>required double secondsBid = 2;</code>
     */
    double getSecondsBid();

    // required double reservedPrice = 3;
    /**
     * <code>required double reservedPrice = 3;</code>
     */
    boolean hasReservedPrice();
    /**
     * <code>required double reservedPrice = 3;</code>
     */
    double getReservedPrice();

    // required .AdxQuery adxQuery = 4;
    /**
     * <code>required .AdxQuery adxQuery = 4;</code>
     */
    boolean hasAdxQuery();
    /**
     * <code>required .AdxQuery adxQuery = 4;</code>
     */
    tau.tac.adx.parser.Auctions.AdxQuery getAdxQuery();
    /**
     * <code>required .AdxQuery adxQuery = 4;</code>
     */
    tau.tac.adx.parser.Auctions.AdxQueryOrBuilder getAdxQueryOrBuilder();
  }
  /**
   * Protobuf type {@code AuctionReport}
   */
  public static final class AuctionReport extends
      com.google.protobuf.GeneratedMessage
      implements AuctionReportOrBuilder {
    // Use AuctionReport.newBuilder() to construct.
    private AuctionReport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AuctionReport(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AuctionReport defaultInstance;
    public static AuctionReport getDefaultInstance() {
      return defaultInstance;
    }

    public AuctionReport getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AuctionReport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              firstBid_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              secondsBid_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              reservedPrice_ = input.readDouble();
              break;
            }
            case 34: {
              tau.tac.adx.parser.Auctions.AdxQuery.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = adxQuery_.toBuilder();
              }
              adxQuery_ = input.readMessage(tau.tac.adx.parser.Auctions.AdxQuery.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(adxQuery_);
                adxQuery_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tau.tac.adx.parser.Auctions.internal_static_AuctionReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tau.tac.adx.parser.Auctions.internal_static_AuctionReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tau.tac.adx.parser.Auctions.AuctionReport.class, tau.tac.adx.parser.Auctions.AuctionReport.Builder.class);
    }

    public static com.google.protobuf.Parser<AuctionReport> PARSER =
        new com.google.protobuf.AbstractParser<AuctionReport>() {
      public AuctionReport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AuctionReport(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AuctionReport> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required double firstBid = 1;
    public static final int FIRSTBID_FIELD_NUMBER = 1;
    private double firstBid_;
    /**
     * <code>required double firstBid = 1;</code>
     */
    public boolean hasFirstBid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double firstBid = 1;</code>
     */
    public double getFirstBid() {
      return firstBid_;
    }

    // required double secondsBid = 2;
    public static final int SECONDSBID_FIELD_NUMBER = 2;
    private double secondsBid_;
    /**
     * <code>required double secondsBid = 2;</code>
     */
    public boolean hasSecondsBid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double secondsBid = 2;</code>
     */
    public double getSecondsBid() {
      return secondsBid_;
    }

    // required double reservedPrice = 3;
    public static final int RESERVEDPRICE_FIELD_NUMBER = 3;
    private double reservedPrice_;
    /**
     * <code>required double reservedPrice = 3;</code>
     */
    public boolean hasReservedPrice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double reservedPrice = 3;</code>
     */
    public double getReservedPrice() {
      return reservedPrice_;
    }

    // required .AdxQuery adxQuery = 4;
    public static final int ADXQUERY_FIELD_NUMBER = 4;
    private tau.tac.adx.parser.Auctions.AdxQuery adxQuery_;
    /**
     * <code>required .AdxQuery adxQuery = 4;</code>
     */
    public boolean hasAdxQuery() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .AdxQuery adxQuery = 4;</code>
     */
    public tau.tac.adx.parser.Auctions.AdxQuery getAdxQuery() {
      return adxQuery_;
    }
    /**
     * <code>required .AdxQuery adxQuery = 4;</code>
     */
    public tau.tac.adx.parser.Auctions.AdxQueryOrBuilder getAdxQueryOrBuilder() {
      return adxQuery_;
    }

    private void initFields() {
      firstBid_ = 0D;
      secondsBid_ = 0D;
      reservedPrice_ = 0D;
      adxQuery_ = tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFirstBid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecondsBid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReservedPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdxQuery()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAdxQuery().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, firstBid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, secondsBid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, reservedPrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, adxQuery_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, firstBid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, secondsBid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, reservedPrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, adxQuery_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static tau.tac.adx.parser.Auctions.AuctionReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AuctionReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(tau.tac.adx.parser.Auctions.AuctionReport prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AuctionReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements tau.tac.adx.parser.Auctions.AuctionReportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tau.tac.adx.parser.Auctions.internal_static_AuctionReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tau.tac.adx.parser.Auctions.internal_static_AuctionReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tau.tac.adx.parser.Auctions.AuctionReport.class, tau.tac.adx.parser.Auctions.AuctionReport.Builder.class);
      }

      // Construct using tau.tac.adx.parser.Auctions.AuctionReport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAdxQueryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        firstBid_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsBid_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        reservedPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (adxQueryBuilder_ == null) {
          adxQuery_ = tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
        } else {
          adxQueryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tau.tac.adx.parser.Auctions.internal_static_AuctionReport_descriptor;
      }

      public tau.tac.adx.parser.Auctions.AuctionReport getDefaultInstanceForType() {
        return tau.tac.adx.parser.Auctions.AuctionReport.getDefaultInstance();
      }

      public tau.tac.adx.parser.Auctions.AuctionReport build() {
        tau.tac.adx.parser.Auctions.AuctionReport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tau.tac.adx.parser.Auctions.AuctionReport buildPartial() {
        tau.tac.adx.parser.Auctions.AuctionReport result = new tau.tac.adx.parser.Auctions.AuctionReport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.firstBid_ = firstBid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.secondsBid_ = secondsBid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.reservedPrice_ = reservedPrice_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (adxQueryBuilder_ == null) {
          result.adxQuery_ = adxQuery_;
        } else {
          result.adxQuery_ = adxQueryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tau.tac.adx.parser.Auctions.AuctionReport) {
          return mergeFrom((tau.tac.adx.parser.Auctions.AuctionReport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tau.tac.adx.parser.Auctions.AuctionReport other) {
        if (other == tau.tac.adx.parser.Auctions.AuctionReport.getDefaultInstance()) return this;
        if (other.hasFirstBid()) {
          setFirstBid(other.getFirstBid());
        }
        if (other.hasSecondsBid()) {
          setSecondsBid(other.getSecondsBid());
        }
        if (other.hasReservedPrice()) {
          setReservedPrice(other.getReservedPrice());
        }
        if (other.hasAdxQuery()) {
          mergeAdxQuery(other.getAdxQuery());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFirstBid()) {
          
          return false;
        }
        if (!hasSecondsBid()) {
          
          return false;
        }
        if (!hasReservedPrice()) {
          
          return false;
        }
        if (!hasAdxQuery()) {
          
          return false;
        }
        if (!getAdxQuery().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tau.tac.adx.parser.Auctions.AuctionReport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tau.tac.adx.parser.Auctions.AuctionReport) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required double firstBid = 1;
      private double firstBid_ ;
      /**
       * <code>required double firstBid = 1;</code>
       */
      public boolean hasFirstBid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double firstBid = 1;</code>
       */
      public double getFirstBid() {
        return firstBid_;
      }
      /**
       * <code>required double firstBid = 1;</code>
       */
      public Builder setFirstBid(double value) {
        bitField0_ |= 0x00000001;
        firstBid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double firstBid = 1;</code>
       */
      public Builder clearFirstBid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        firstBid_ = 0D;
        onChanged();
        return this;
      }

      // required double secondsBid = 2;
      private double secondsBid_ ;
      /**
       * <code>required double secondsBid = 2;</code>
       */
      public boolean hasSecondsBid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double secondsBid = 2;</code>
       */
      public double getSecondsBid() {
        return secondsBid_;
      }
      /**
       * <code>required double secondsBid = 2;</code>
       */
      public Builder setSecondsBid(double value) {
        bitField0_ |= 0x00000002;
        secondsBid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double secondsBid = 2;</code>
       */
      public Builder clearSecondsBid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        secondsBid_ = 0D;
        onChanged();
        return this;
      }

      // required double reservedPrice = 3;
      private double reservedPrice_ ;
      /**
       * <code>required double reservedPrice = 3;</code>
       */
      public boolean hasReservedPrice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double reservedPrice = 3;</code>
       */
      public double getReservedPrice() {
        return reservedPrice_;
      }
      /**
       * <code>required double reservedPrice = 3;</code>
       */
      public Builder setReservedPrice(double value) {
        bitField0_ |= 0x00000004;
        reservedPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double reservedPrice = 3;</code>
       */
      public Builder clearReservedPrice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reservedPrice_ = 0D;
        onChanged();
        return this;
      }

      // required .AdxQuery adxQuery = 4;
      private tau.tac.adx.parser.Auctions.AdxQuery adxQuery_ = tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          tau.tac.adx.parser.Auctions.AdxQuery, tau.tac.adx.parser.Auctions.AdxQuery.Builder, tau.tac.adx.parser.Auctions.AdxQueryOrBuilder> adxQueryBuilder_;
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      public boolean hasAdxQuery() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQuery getAdxQuery() {
        if (adxQueryBuilder_ == null) {
          return adxQuery_;
        } else {
          return adxQueryBuilder_.getMessage();
        }
      }
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      public Builder setAdxQuery(tau.tac.adx.parser.Auctions.AdxQuery value) {
        if (adxQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          adxQuery_ = value;
          onChanged();
        } else {
          adxQueryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      public Builder setAdxQuery(
          tau.tac.adx.parser.Auctions.AdxQuery.Builder builderForValue) {
        if (adxQueryBuilder_ == null) {
          adxQuery_ = builderForValue.build();
          onChanged();
        } else {
          adxQueryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      public Builder mergeAdxQuery(tau.tac.adx.parser.Auctions.AdxQuery value) {
        if (adxQueryBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              adxQuery_ != tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance()) {
            adxQuery_ =
              tau.tac.adx.parser.Auctions.AdxQuery.newBuilder(adxQuery_).mergeFrom(value).buildPartial();
          } else {
            adxQuery_ = value;
          }
          onChanged();
        } else {
          adxQueryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      public Builder clearAdxQuery() {
        if (adxQueryBuilder_ == null) {
          adxQuery_ = tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
          onChanged();
        } else {
          adxQueryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQuery.Builder getAdxQueryBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAdxQueryFieldBuilder().getBuilder();
      }
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQueryOrBuilder getAdxQueryOrBuilder() {
        if (adxQueryBuilder_ != null) {
          return adxQueryBuilder_.getMessageOrBuilder();
        } else {
          return adxQuery_;
        }
      }
      /**
       * <code>required .AdxQuery adxQuery = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          tau.tac.adx.parser.Auctions.AdxQuery, tau.tac.adx.parser.Auctions.AdxQuery.Builder, tau.tac.adx.parser.Auctions.AdxQueryOrBuilder> 
          getAdxQueryFieldBuilder() {
        if (adxQueryBuilder_ == null) {
          adxQueryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tau.tac.adx.parser.Auctions.AdxQuery, tau.tac.adx.parser.Auctions.AdxQuery.Builder, tau.tac.adx.parser.Auctions.AdxQueryOrBuilder>(
                  adxQuery_,
                  getParentForChildren(),
                  isClean());
          adxQuery_ = null;
        }
        return adxQueryBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:AuctionReport)
    }

    static {
      defaultInstance = new AuctionReport(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AuctionReport)
  }

  public interface DataBundleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .AuctionReport reports = 1;
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    java.util.List<tau.tac.adx.parser.Auctions.AuctionReport> 
        getReportsList();
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    tau.tac.adx.parser.Auctions.AuctionReport getReports(int index);
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    int getReportsCount();
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    java.util.List<? extends tau.tac.adx.parser.Auctions.AuctionReportOrBuilder> 
        getReportsOrBuilderList();
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    tau.tac.adx.parser.Auctions.AuctionReportOrBuilder getReportsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DataBundle}
   */
  public static final class DataBundle extends
      com.google.protobuf.GeneratedMessage
      implements DataBundleOrBuilder {
    // Use DataBundle.newBuilder() to construct.
    private DataBundle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataBundle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataBundle defaultInstance;
    public static DataBundle getDefaultInstance() {
      return defaultInstance;
    }

    public DataBundle getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataBundle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                reports_ = new java.util.ArrayList<tau.tac.adx.parser.Auctions.AuctionReport>();
                mutable_bitField0_ |= 0x00000001;
              }
              reports_.add(input.readMessage(tau.tac.adx.parser.Auctions.AuctionReport.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          reports_ = java.util.Collections.unmodifiableList(reports_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tau.tac.adx.parser.Auctions.internal_static_DataBundle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tau.tac.adx.parser.Auctions.internal_static_DataBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tau.tac.adx.parser.Auctions.DataBundle.class, tau.tac.adx.parser.Auctions.DataBundle.Builder.class);
    }

    public static com.google.protobuf.Parser<DataBundle> PARSER =
        new com.google.protobuf.AbstractParser<DataBundle>() {
      public DataBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataBundle(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DataBundle> getParserForType() {
      return PARSER;
    }

    // repeated .AuctionReport reports = 1;
    public static final int REPORTS_FIELD_NUMBER = 1;
    private java.util.List<tau.tac.adx.parser.Auctions.AuctionReport> reports_;
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    public java.util.List<tau.tac.adx.parser.Auctions.AuctionReport> getReportsList() {
      return reports_;
    }
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    public java.util.List<? extends tau.tac.adx.parser.Auctions.AuctionReportOrBuilder> 
        getReportsOrBuilderList() {
      return reports_;
    }
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    public int getReportsCount() {
      return reports_.size();
    }
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    public tau.tac.adx.parser.Auctions.AuctionReport getReports(int index) {
      return reports_.get(index);
    }
    /**
     * <code>repeated .AuctionReport reports = 1;</code>
     */
    public tau.tac.adx.parser.Auctions.AuctionReportOrBuilder getReportsOrBuilder(
        int index) {
      return reports_.get(index);
    }

    private void initFields() {
      reports_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getReportsCount(); i++) {
        if (!getReports(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < reports_.size(); i++) {
        output.writeMessage(1, reports_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < reports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, reports_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static tau.tac.adx.parser.Auctions.DataBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.DataBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(tau.tac.adx.parser.Auctions.DataBundle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements tau.tac.adx.parser.Auctions.DataBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tau.tac.adx.parser.Auctions.internal_static_DataBundle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tau.tac.adx.parser.Auctions.internal_static_DataBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tau.tac.adx.parser.Auctions.DataBundle.class, tau.tac.adx.parser.Auctions.DataBundle.Builder.class);
      }

      // Construct using tau.tac.adx.parser.Auctions.DataBundle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getReportsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (reportsBuilder_ == null) {
          reports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          reportsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tau.tac.adx.parser.Auctions.internal_static_DataBundle_descriptor;
      }

      public tau.tac.adx.parser.Auctions.DataBundle getDefaultInstanceForType() {
        return tau.tac.adx.parser.Auctions.DataBundle.getDefaultInstance();
      }

      public tau.tac.adx.parser.Auctions.DataBundle build() {
        tau.tac.adx.parser.Auctions.DataBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tau.tac.adx.parser.Auctions.DataBundle buildPartial() {
        tau.tac.adx.parser.Auctions.DataBundle result = new tau.tac.adx.parser.Auctions.DataBundle(this);
        int from_bitField0_ = bitField0_;
        if (reportsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            reports_ = java.util.Collections.unmodifiableList(reports_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.reports_ = reports_;
        } else {
          result.reports_ = reportsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tau.tac.adx.parser.Auctions.DataBundle) {
          return mergeFrom((tau.tac.adx.parser.Auctions.DataBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tau.tac.adx.parser.Auctions.DataBundle other) {
        if (other == tau.tac.adx.parser.Auctions.DataBundle.getDefaultInstance()) return this;
        if (reportsBuilder_ == null) {
          if (!other.reports_.isEmpty()) {
            if (reports_.isEmpty()) {
              reports_ = other.reports_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureReportsIsMutable();
              reports_.addAll(other.reports_);
            }
            onChanged();
          }
        } else {
          if (!other.reports_.isEmpty()) {
            if (reportsBuilder_.isEmpty()) {
              reportsBuilder_.dispose();
              reportsBuilder_ = null;
              reports_ = other.reports_;
              bitField0_ = (bitField0_ & ~0x00000001);
              reportsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getReportsFieldBuilder() : null;
            } else {
              reportsBuilder_.addAllMessages(other.reports_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getReportsCount(); i++) {
          if (!getReports(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tau.tac.adx.parser.Auctions.DataBundle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tau.tac.adx.parser.Auctions.DataBundle) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .AuctionReport reports = 1;
      private java.util.List<tau.tac.adx.parser.Auctions.AuctionReport> reports_ =
        java.util.Collections.emptyList();
      private void ensureReportsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          reports_ = new java.util.ArrayList<tau.tac.adx.parser.Auctions.AuctionReport>(reports_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          tau.tac.adx.parser.Auctions.AuctionReport, tau.tac.adx.parser.Auctions.AuctionReport.Builder, tau.tac.adx.parser.Auctions.AuctionReportOrBuilder> reportsBuilder_;

      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public java.util.List<tau.tac.adx.parser.Auctions.AuctionReport> getReportsList() {
        if (reportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reports_);
        } else {
          return reportsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public int getReportsCount() {
        if (reportsBuilder_ == null) {
          return reports_.size();
        } else {
          return reportsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AuctionReport getReports(int index) {
        if (reportsBuilder_ == null) {
          return reports_.get(index);
        } else {
          return reportsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder setReports(
          int index, tau.tac.adx.parser.Auctions.AuctionReport value) {
        if (reportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportsIsMutable();
          reports_.set(index, value);
          onChanged();
        } else {
          reportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder setReports(
          int index, tau.tac.adx.parser.Auctions.AuctionReport.Builder builderForValue) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          reports_.set(index, builderForValue.build());
          onChanged();
        } else {
          reportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder addReports(tau.tac.adx.parser.Auctions.AuctionReport value) {
        if (reportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportsIsMutable();
          reports_.add(value);
          onChanged();
        } else {
          reportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder addReports(
          int index, tau.tac.adx.parser.Auctions.AuctionReport value) {
        if (reportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportsIsMutable();
          reports_.add(index, value);
          onChanged();
        } else {
          reportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder addReports(
          tau.tac.adx.parser.Auctions.AuctionReport.Builder builderForValue) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          reports_.add(builderForValue.build());
          onChanged();
        } else {
          reportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder addReports(
          int index, tau.tac.adx.parser.Auctions.AuctionReport.Builder builderForValue) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          reports_.add(index, builderForValue.build());
          onChanged();
        } else {
          reportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder addAllReports(
          java.lang.Iterable<? extends tau.tac.adx.parser.Auctions.AuctionReport> values) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          super.addAll(values, reports_);
          onChanged();
        } else {
          reportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder clearReports() {
        if (reportsBuilder_ == null) {
          reports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          reportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public Builder removeReports(int index) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          reports_.remove(index);
          onChanged();
        } else {
          reportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AuctionReport.Builder getReportsBuilder(
          int index) {
        return getReportsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AuctionReportOrBuilder getReportsOrBuilder(
          int index) {
        if (reportsBuilder_ == null) {
          return reports_.get(index);  } else {
          return reportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public java.util.List<? extends tau.tac.adx.parser.Auctions.AuctionReportOrBuilder> 
           getReportsOrBuilderList() {
        if (reportsBuilder_ != null) {
          return reportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reports_);
        }
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AuctionReport.Builder addReportsBuilder() {
        return getReportsFieldBuilder().addBuilder(
            tau.tac.adx.parser.Auctions.AuctionReport.getDefaultInstance());
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AuctionReport.Builder addReportsBuilder(
          int index) {
        return getReportsFieldBuilder().addBuilder(
            index, tau.tac.adx.parser.Auctions.AuctionReport.getDefaultInstance());
      }
      /**
       * <code>repeated .AuctionReport reports = 1;</code>
       */
      public java.util.List<tau.tac.adx.parser.Auctions.AuctionReport.Builder> 
           getReportsBuilderList() {
        return getReportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          tau.tac.adx.parser.Auctions.AuctionReport, tau.tac.adx.parser.Auctions.AuctionReport.Builder, tau.tac.adx.parser.Auctions.AuctionReportOrBuilder> 
          getReportsFieldBuilder() {
        if (reportsBuilder_ == null) {
          reportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              tau.tac.adx.parser.Auctions.AuctionReport, tau.tac.adx.parser.Auctions.AuctionReport.Builder, tau.tac.adx.parser.Auctions.AuctionReportOrBuilder>(
                  reports_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          reports_ = null;
        }
        return reportsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DataBundle)
    }

    static {
      defaultInstance = new DataBundle(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DataBundle)
  }

  public interface AdxQueryPricingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .AdxQuery adxQuery = 1;
    /**
     * <code>required .AdxQuery adxQuery = 1;</code>
     */
    boolean hasAdxQuery();
    /**
     * <code>required .AdxQuery adxQuery = 1;</code>
     */
    tau.tac.adx.parser.Auctions.AdxQuery getAdxQuery();
    /**
     * <code>required .AdxQuery adxQuery = 1;</code>
     */
    tau.tac.adx.parser.Auctions.AdxQueryOrBuilder getAdxQueryOrBuilder();

    // required float reservePrice = 2;
    /**
     * <code>required float reservePrice = 2;</code>
     */
    boolean hasReservePrice();
    /**
     * <code>required float reservePrice = 2;</code>
     */
    float getReservePrice();
  }
  /**
   * Protobuf type {@code AdxQueryPricing}
   */
  public static final class AdxQueryPricing extends
      com.google.protobuf.GeneratedMessage
      implements AdxQueryPricingOrBuilder {
    // Use AdxQueryPricing.newBuilder() to construct.
    private AdxQueryPricing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AdxQueryPricing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AdxQueryPricing defaultInstance;
    public static AdxQueryPricing getDefaultInstance() {
      return defaultInstance;
    }

    public AdxQueryPricing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AdxQueryPricing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tau.tac.adx.parser.Auctions.AdxQuery.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = adxQuery_.toBuilder();
              }
              adxQuery_ = input.readMessage(tau.tac.adx.parser.Auctions.AdxQuery.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(adxQuery_);
                adxQuery_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              reservePrice_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tau.tac.adx.parser.Auctions.internal_static_AdxQueryPricing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tau.tac.adx.parser.Auctions.internal_static_AdxQueryPricing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tau.tac.adx.parser.Auctions.AdxQueryPricing.class, tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder.class);
    }

    public static com.google.protobuf.Parser<AdxQueryPricing> PARSER =
        new com.google.protobuf.AbstractParser<AdxQueryPricing>() {
      public AdxQueryPricing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdxQueryPricing(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AdxQueryPricing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .AdxQuery adxQuery = 1;
    public static final int ADXQUERY_FIELD_NUMBER = 1;
    private tau.tac.adx.parser.Auctions.AdxQuery adxQuery_;
    /**
     * <code>required .AdxQuery adxQuery = 1;</code>
     */
    public boolean hasAdxQuery() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .AdxQuery adxQuery = 1;</code>
     */
    public tau.tac.adx.parser.Auctions.AdxQuery getAdxQuery() {
      return adxQuery_;
    }
    /**
     * <code>required .AdxQuery adxQuery = 1;</code>
     */
    public tau.tac.adx.parser.Auctions.AdxQueryOrBuilder getAdxQueryOrBuilder() {
      return adxQuery_;
    }

    // required float reservePrice = 2;
    public static final int RESERVEPRICE_FIELD_NUMBER = 2;
    private float reservePrice_;
    /**
     * <code>required float reservePrice = 2;</code>
     */
    public boolean hasReservePrice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float reservePrice = 2;</code>
     */
    public float getReservePrice() {
      return reservePrice_;
    }

    private void initFields() {
      adxQuery_ = tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
      reservePrice_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAdxQuery()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReservePrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAdxQuery().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, adxQuery_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, reservePrice_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, adxQuery_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, reservePrice_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.AdxQueryPricing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(tau.tac.adx.parser.Auctions.AdxQueryPricing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AdxQueryPricing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tau.tac.adx.parser.Auctions.internal_static_AdxQueryPricing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tau.tac.adx.parser.Auctions.internal_static_AdxQueryPricing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tau.tac.adx.parser.Auctions.AdxQueryPricing.class, tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder.class);
      }

      // Construct using tau.tac.adx.parser.Auctions.AdxQueryPricing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAdxQueryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (adxQueryBuilder_ == null) {
          adxQuery_ = tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
        } else {
          adxQueryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        reservePrice_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tau.tac.adx.parser.Auctions.internal_static_AdxQueryPricing_descriptor;
      }

      public tau.tac.adx.parser.Auctions.AdxQueryPricing getDefaultInstanceForType() {
        return tau.tac.adx.parser.Auctions.AdxQueryPricing.getDefaultInstance();
      }

      public tau.tac.adx.parser.Auctions.AdxQueryPricing build() {
        tau.tac.adx.parser.Auctions.AdxQueryPricing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tau.tac.adx.parser.Auctions.AdxQueryPricing buildPartial() {
        tau.tac.adx.parser.Auctions.AdxQueryPricing result = new tau.tac.adx.parser.Auctions.AdxQueryPricing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (adxQueryBuilder_ == null) {
          result.adxQuery_ = adxQuery_;
        } else {
          result.adxQuery_ = adxQueryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.reservePrice_ = reservePrice_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tau.tac.adx.parser.Auctions.AdxQueryPricing) {
          return mergeFrom((tau.tac.adx.parser.Auctions.AdxQueryPricing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tau.tac.adx.parser.Auctions.AdxQueryPricing other) {
        if (other == tau.tac.adx.parser.Auctions.AdxQueryPricing.getDefaultInstance()) return this;
        if (other.hasAdxQuery()) {
          mergeAdxQuery(other.getAdxQuery());
        }
        if (other.hasReservePrice()) {
          setReservePrice(other.getReservePrice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAdxQuery()) {
          
          return false;
        }
        if (!hasReservePrice()) {
          
          return false;
        }
        if (!getAdxQuery().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tau.tac.adx.parser.Auctions.AdxQueryPricing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tau.tac.adx.parser.Auctions.AdxQueryPricing) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .AdxQuery adxQuery = 1;
      private tau.tac.adx.parser.Auctions.AdxQuery adxQuery_ = tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          tau.tac.adx.parser.Auctions.AdxQuery, tau.tac.adx.parser.Auctions.AdxQuery.Builder, tau.tac.adx.parser.Auctions.AdxQueryOrBuilder> adxQueryBuilder_;
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      public boolean hasAdxQuery() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQuery getAdxQuery() {
        if (adxQueryBuilder_ == null) {
          return adxQuery_;
        } else {
          return adxQueryBuilder_.getMessage();
        }
      }
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      public Builder setAdxQuery(tau.tac.adx.parser.Auctions.AdxQuery value) {
        if (adxQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          adxQuery_ = value;
          onChanged();
        } else {
          adxQueryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      public Builder setAdxQuery(
          tau.tac.adx.parser.Auctions.AdxQuery.Builder builderForValue) {
        if (adxQueryBuilder_ == null) {
          adxQuery_ = builderForValue.build();
          onChanged();
        } else {
          adxQueryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      public Builder mergeAdxQuery(tau.tac.adx.parser.Auctions.AdxQuery value) {
        if (adxQueryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              adxQuery_ != tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance()) {
            adxQuery_ =
              tau.tac.adx.parser.Auctions.AdxQuery.newBuilder(adxQuery_).mergeFrom(value).buildPartial();
          } else {
            adxQuery_ = value;
          }
          onChanged();
        } else {
          adxQueryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      public Builder clearAdxQuery() {
        if (adxQueryBuilder_ == null) {
          adxQuery_ = tau.tac.adx.parser.Auctions.AdxQuery.getDefaultInstance();
          onChanged();
        } else {
          adxQueryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQuery.Builder getAdxQueryBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAdxQueryFieldBuilder().getBuilder();
      }
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQueryOrBuilder getAdxQueryOrBuilder() {
        if (adxQueryBuilder_ != null) {
          return adxQueryBuilder_.getMessageOrBuilder();
        } else {
          return adxQuery_;
        }
      }
      /**
       * <code>required .AdxQuery adxQuery = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          tau.tac.adx.parser.Auctions.AdxQuery, tau.tac.adx.parser.Auctions.AdxQuery.Builder, tau.tac.adx.parser.Auctions.AdxQueryOrBuilder> 
          getAdxQueryFieldBuilder() {
        if (adxQueryBuilder_ == null) {
          adxQueryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tau.tac.adx.parser.Auctions.AdxQuery, tau.tac.adx.parser.Auctions.AdxQuery.Builder, tau.tac.adx.parser.Auctions.AdxQueryOrBuilder>(
                  adxQuery_,
                  getParentForChildren(),
                  isClean());
          adxQuery_ = null;
        }
        return adxQueryBuilder_;
      }

      // required float reservePrice = 2;
      private float reservePrice_ ;
      /**
       * <code>required float reservePrice = 2;</code>
       */
      public boolean hasReservePrice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float reservePrice = 2;</code>
       */
      public float getReservePrice() {
        return reservePrice_;
      }
      /**
       * <code>required float reservePrice = 2;</code>
       */
      public Builder setReservePrice(float value) {
        bitField0_ |= 0x00000002;
        reservePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float reservePrice = 2;</code>
       */
      public Builder clearReservePrice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        reservePrice_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AdxQueryPricing)
    }

    static {
      defaultInstance = new AdxQueryPricing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AdxQueryPricing)
  }

  public interface ReservePriceManagerBundleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .AdxQueryPricing adxQueryPricings = 1;
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    java.util.List<tau.tac.adx.parser.Auctions.AdxQueryPricing> 
        getAdxQueryPricingsList();
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    tau.tac.adx.parser.Auctions.AdxQueryPricing getAdxQueryPricings(int index);
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    int getAdxQueryPricingsCount();
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    java.util.List<? extends tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder> 
        getAdxQueryPricingsOrBuilderList();
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder getAdxQueryPricingsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ReservePriceManagerBundle}
   */
  public static final class ReservePriceManagerBundle extends
      com.google.protobuf.GeneratedMessage
      implements ReservePriceManagerBundleOrBuilder {
    // Use ReservePriceManagerBundle.newBuilder() to construct.
    private ReservePriceManagerBundle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReservePriceManagerBundle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReservePriceManagerBundle defaultInstance;
    public static ReservePriceManagerBundle getDefaultInstance() {
      return defaultInstance;
    }

    public ReservePriceManagerBundle getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReservePriceManagerBundle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                adxQueryPricings_ = new java.util.ArrayList<tau.tac.adx.parser.Auctions.AdxQueryPricing>();
                mutable_bitField0_ |= 0x00000001;
              }
              adxQueryPricings_.add(input.readMessage(tau.tac.adx.parser.Auctions.AdxQueryPricing.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          adxQueryPricings_ = java.util.Collections.unmodifiableList(adxQueryPricings_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tau.tac.adx.parser.Auctions.internal_static_ReservePriceManagerBundle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tau.tac.adx.parser.Auctions.internal_static_ReservePriceManagerBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tau.tac.adx.parser.Auctions.ReservePriceManagerBundle.class, tau.tac.adx.parser.Auctions.ReservePriceManagerBundle.Builder.class);
    }

    public static com.google.protobuf.Parser<ReservePriceManagerBundle> PARSER =
        new com.google.protobuf.AbstractParser<ReservePriceManagerBundle>() {
      public ReservePriceManagerBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReservePriceManagerBundle(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReservePriceManagerBundle> getParserForType() {
      return PARSER;
    }

    // repeated .AdxQueryPricing adxQueryPricings = 1;
    public static final int ADXQUERYPRICINGS_FIELD_NUMBER = 1;
    private java.util.List<tau.tac.adx.parser.Auctions.AdxQueryPricing> adxQueryPricings_;
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    public java.util.List<tau.tac.adx.parser.Auctions.AdxQueryPricing> getAdxQueryPricingsList() {
      return adxQueryPricings_;
    }
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    public java.util.List<? extends tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder> 
        getAdxQueryPricingsOrBuilderList() {
      return adxQueryPricings_;
    }
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    public int getAdxQueryPricingsCount() {
      return adxQueryPricings_.size();
    }
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    public tau.tac.adx.parser.Auctions.AdxQueryPricing getAdxQueryPricings(int index) {
      return adxQueryPricings_.get(index);
    }
    /**
     * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
     */
    public tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder getAdxQueryPricingsOrBuilder(
        int index) {
      return adxQueryPricings_.get(index);
    }

    private void initFields() {
      adxQueryPricings_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getAdxQueryPricingsCount(); i++) {
        if (!getAdxQueryPricings(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < adxQueryPricings_.size(); i++) {
        output.writeMessage(1, adxQueryPricings_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < adxQueryPricings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, adxQueryPricings_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(tau.tac.adx.parser.Auctions.ReservePriceManagerBundle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ReservePriceManagerBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements tau.tac.adx.parser.Auctions.ReservePriceManagerBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tau.tac.adx.parser.Auctions.internal_static_ReservePriceManagerBundle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tau.tac.adx.parser.Auctions.internal_static_ReservePriceManagerBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tau.tac.adx.parser.Auctions.ReservePriceManagerBundle.class, tau.tac.adx.parser.Auctions.ReservePriceManagerBundle.Builder.class);
      }

      // Construct using tau.tac.adx.parser.Auctions.ReservePriceManagerBundle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAdxQueryPricingsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (adxQueryPricingsBuilder_ == null) {
          adxQueryPricings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          adxQueryPricingsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tau.tac.adx.parser.Auctions.internal_static_ReservePriceManagerBundle_descriptor;
      }

      public tau.tac.adx.parser.Auctions.ReservePriceManagerBundle getDefaultInstanceForType() {
        return tau.tac.adx.parser.Auctions.ReservePriceManagerBundle.getDefaultInstance();
      }

      public tau.tac.adx.parser.Auctions.ReservePriceManagerBundle build() {
        tau.tac.adx.parser.Auctions.ReservePriceManagerBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tau.tac.adx.parser.Auctions.ReservePriceManagerBundle buildPartial() {
        tau.tac.adx.parser.Auctions.ReservePriceManagerBundle result = new tau.tac.adx.parser.Auctions.ReservePriceManagerBundle(this);
        int from_bitField0_ = bitField0_;
        if (adxQueryPricingsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            adxQueryPricings_ = java.util.Collections.unmodifiableList(adxQueryPricings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.adxQueryPricings_ = adxQueryPricings_;
        } else {
          result.adxQueryPricings_ = adxQueryPricingsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tau.tac.adx.parser.Auctions.ReservePriceManagerBundle) {
          return mergeFrom((tau.tac.adx.parser.Auctions.ReservePriceManagerBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tau.tac.adx.parser.Auctions.ReservePriceManagerBundle other) {
        if (other == tau.tac.adx.parser.Auctions.ReservePriceManagerBundle.getDefaultInstance()) return this;
        if (adxQueryPricingsBuilder_ == null) {
          if (!other.adxQueryPricings_.isEmpty()) {
            if (adxQueryPricings_.isEmpty()) {
              adxQueryPricings_ = other.adxQueryPricings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAdxQueryPricingsIsMutable();
              adxQueryPricings_.addAll(other.adxQueryPricings_);
            }
            onChanged();
          }
        } else {
          if (!other.adxQueryPricings_.isEmpty()) {
            if (adxQueryPricingsBuilder_.isEmpty()) {
              adxQueryPricingsBuilder_.dispose();
              adxQueryPricingsBuilder_ = null;
              adxQueryPricings_ = other.adxQueryPricings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              adxQueryPricingsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAdxQueryPricingsFieldBuilder() : null;
            } else {
              adxQueryPricingsBuilder_.addAllMessages(other.adxQueryPricings_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getAdxQueryPricingsCount(); i++) {
          if (!getAdxQueryPricings(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tau.tac.adx.parser.Auctions.ReservePriceManagerBundle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tau.tac.adx.parser.Auctions.ReservePriceManagerBundle) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .AdxQueryPricing adxQueryPricings = 1;
      private java.util.List<tau.tac.adx.parser.Auctions.AdxQueryPricing> adxQueryPricings_ =
        java.util.Collections.emptyList();
      private void ensureAdxQueryPricingsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          adxQueryPricings_ = new java.util.ArrayList<tau.tac.adx.parser.Auctions.AdxQueryPricing>(adxQueryPricings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          tau.tac.adx.parser.Auctions.AdxQueryPricing, tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder, tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder> adxQueryPricingsBuilder_;

      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public java.util.List<tau.tac.adx.parser.Auctions.AdxQueryPricing> getAdxQueryPricingsList() {
        if (adxQueryPricingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(adxQueryPricings_);
        } else {
          return adxQueryPricingsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public int getAdxQueryPricingsCount() {
        if (adxQueryPricingsBuilder_ == null) {
          return adxQueryPricings_.size();
        } else {
          return adxQueryPricingsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQueryPricing getAdxQueryPricings(int index) {
        if (adxQueryPricingsBuilder_ == null) {
          return adxQueryPricings_.get(index);
        } else {
          return adxQueryPricingsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder setAdxQueryPricings(
          int index, tau.tac.adx.parser.Auctions.AdxQueryPricing value) {
        if (adxQueryPricingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdxQueryPricingsIsMutable();
          adxQueryPricings_.set(index, value);
          onChanged();
        } else {
          adxQueryPricingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder setAdxQueryPricings(
          int index, tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder builderForValue) {
        if (adxQueryPricingsBuilder_ == null) {
          ensureAdxQueryPricingsIsMutable();
          adxQueryPricings_.set(index, builderForValue.build());
          onChanged();
        } else {
          adxQueryPricingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder addAdxQueryPricings(tau.tac.adx.parser.Auctions.AdxQueryPricing value) {
        if (adxQueryPricingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdxQueryPricingsIsMutable();
          adxQueryPricings_.add(value);
          onChanged();
        } else {
          adxQueryPricingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder addAdxQueryPricings(
          int index, tau.tac.adx.parser.Auctions.AdxQueryPricing value) {
        if (adxQueryPricingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdxQueryPricingsIsMutable();
          adxQueryPricings_.add(index, value);
          onChanged();
        } else {
          adxQueryPricingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder addAdxQueryPricings(
          tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder builderForValue) {
        if (adxQueryPricingsBuilder_ == null) {
          ensureAdxQueryPricingsIsMutable();
          adxQueryPricings_.add(builderForValue.build());
          onChanged();
        } else {
          adxQueryPricingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder addAdxQueryPricings(
          int index, tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder builderForValue) {
        if (adxQueryPricingsBuilder_ == null) {
          ensureAdxQueryPricingsIsMutable();
          adxQueryPricings_.add(index, builderForValue.build());
          onChanged();
        } else {
          adxQueryPricingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder addAllAdxQueryPricings(
          java.lang.Iterable<? extends tau.tac.adx.parser.Auctions.AdxQueryPricing> values) {
        if (adxQueryPricingsBuilder_ == null) {
          ensureAdxQueryPricingsIsMutable();
          super.addAll(values, adxQueryPricings_);
          onChanged();
        } else {
          adxQueryPricingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder clearAdxQueryPricings() {
        if (adxQueryPricingsBuilder_ == null) {
          adxQueryPricings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          adxQueryPricingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public Builder removeAdxQueryPricings(int index) {
        if (adxQueryPricingsBuilder_ == null) {
          ensureAdxQueryPricingsIsMutable();
          adxQueryPricings_.remove(index);
          onChanged();
        } else {
          adxQueryPricingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder getAdxQueryPricingsBuilder(
          int index) {
        return getAdxQueryPricingsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder getAdxQueryPricingsOrBuilder(
          int index) {
        if (adxQueryPricingsBuilder_ == null) {
          return adxQueryPricings_.get(index);  } else {
          return adxQueryPricingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public java.util.List<? extends tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder> 
           getAdxQueryPricingsOrBuilderList() {
        if (adxQueryPricingsBuilder_ != null) {
          return adxQueryPricingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(adxQueryPricings_);
        }
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder addAdxQueryPricingsBuilder() {
        return getAdxQueryPricingsFieldBuilder().addBuilder(
            tau.tac.adx.parser.Auctions.AdxQueryPricing.getDefaultInstance());
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder addAdxQueryPricingsBuilder(
          int index) {
        return getAdxQueryPricingsFieldBuilder().addBuilder(
            index, tau.tac.adx.parser.Auctions.AdxQueryPricing.getDefaultInstance());
      }
      /**
       * <code>repeated .AdxQueryPricing adxQueryPricings = 1;</code>
       */
      public java.util.List<tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder> 
           getAdxQueryPricingsBuilderList() {
        return getAdxQueryPricingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          tau.tac.adx.parser.Auctions.AdxQueryPricing, tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder, tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder> 
          getAdxQueryPricingsFieldBuilder() {
        if (adxQueryPricingsBuilder_ == null) {
          adxQueryPricingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              tau.tac.adx.parser.Auctions.AdxQueryPricing, tau.tac.adx.parser.Auctions.AdxQueryPricing.Builder, tau.tac.adx.parser.Auctions.AdxQueryPricingOrBuilder>(
                  adxQueryPricings_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          adxQueryPricings_ = null;
        }
        return adxQueryPricingsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ReservePriceManagerBundle)
    }

    static {
      defaultInstance = new ReservePriceManagerBundle(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ReservePriceManagerBundle)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AdxQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AdxQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AuctionReport_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AuctionReport_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DataBundle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DataBundle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AdxQueryPricing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AdxQueryPricing_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ReservePriceManagerBundle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ReservePriceManagerBundle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016auctions.proto\"w\n\010AdxQuery\022\021\n\tpublishe" +
      "r\030\001 \002(\t\022&\n\016marketSegments\030\002 \003(\0162\016.Market" +
      "Segment\022\027\n\006device\030\003 \002(\0162\007.Device\022\027\n\006adty" +
      "pe\030\004 \002(\0162\007.AdType\"i\n\rAuctionReport\022\020\n\010fi" +
      "rstBid\030\001 \002(\001\022\022\n\nsecondsBid\030\002 \002(\001\022\025\n\rrese" +
      "rvedPrice\030\003 \002(\001\022\033\n\010adxQuery\030\004 \002(\0132\t.AdxQ" +
      "uery\"-\n\nDataBundle\022\037\n\007reports\030\001 \003(\0132\016.Au" +
      "ctionReport\"D\n\017AdxQueryPricing\022\033\n\010adxQue" +
      "ry\030\001 \002(\0132\t.AdxQuery\022\024\n\014reservePrice\030\002 \002(" +
      "\002\"G\n\031ReservePriceManagerBundle\022*\n\020adxQue",
      "ryPricings\030\001 \003(\0132\020.AdxQueryPricing*Z\n\rMa" +
      "rketSegment\022\010\n\004MALE\020\000\022\n\n\006FEMALE\020\001\022\t\n\005YOU" +
      "NG\020\002\022\007\n\003OLD\020\003\022\016\n\nLOW_INCOME\020\004\022\017\n\013HIGH_IN" +
      "COME\020\005*\034\n\006Device\022\n\n\006MOBILE\020\000\022\006\n\002PC\020\001*\035\n\006" +
      "AdType\022\010\n\004TEXT\020\000\022\t\n\005VIDEO\020\001B\024\n\022tau.tac.a" +
      "dx.parser"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_AdxQuery_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_AdxQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AdxQuery_descriptor,
              new java.lang.String[] { "Publisher", "MarketSegments", "Device", "Adtype", });
          internal_static_AuctionReport_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_AuctionReport_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AuctionReport_descriptor,
              new java.lang.String[] { "FirstBid", "SecondsBid", "ReservedPrice", "AdxQuery", });
          internal_static_DataBundle_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_DataBundle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DataBundle_descriptor,
              new java.lang.String[] { "Reports", });
          internal_static_AdxQueryPricing_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_AdxQueryPricing_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AdxQueryPricing_descriptor,
              new java.lang.String[] { "AdxQuery", "ReservePrice", });
          internal_static_ReservePriceManagerBundle_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_ReservePriceManagerBundle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ReservePriceManagerBundle_descriptor,
              new java.lang.String[] { "AdxQueryPricings", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
